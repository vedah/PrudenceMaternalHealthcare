/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loginform;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class Welcomes extends javax.swing.JFrame {

    /**
     * Creates new form Welcome
     */
    public Welcomes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        db = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        PanelHome = new javax.swing.JPanel();
        PanelFile = new javax.swing.JPanel();
        PanelMother = new javax.swing.JPanel();
        LabelFirstName = new javax.swing.JLabel();
        TextFieldFirstName = new javax.swing.JTextField();
        LabelSurname = new javax.swing.JLabel();
        TextFieldSurname = new javax.swing.JTextField();
        LabelIDNumber = new javax.swing.JLabel();
        TextFieldIDNO = new javax.swing.JTextField();
        LabelBloodGroup = new javax.swing.JLabel();
        TextFieldBloodGroup = new javax.swing.JTextField();
        LabelPregnancyPeriod = new javax.swing.JLabel();
        TextFieldPregnancyPeriod = new javax.swing.JTextField();
        ButtonAddMother = new javax.swing.JButton();
        PanelPregnancy = new javax.swing.JPanel();
        ScrollPanePregnancy = new javax.swing.JScrollPane();
        TextAreaPregnancy = new javax.swing.JTextArea();
        Buttonpregnancy = new javax.swing.JButton();
        PanelEditMother = new javax.swing.JPanel();
        ScrollPaneMother = new javax.swing.JScrollPane();
        TextAreaEditMother = new javax.swing.JTextArea();
        LabelEditMother = new javax.swing.JLabel();
        ButtonSaveMother = new javax.swing.JButton();
        ButtonShowMothers = new javax.swing.JButton();
        PanelEmployee = new javax.swing.JPanel();
        LabelFirstN = new javax.swing.JLabel();
        TextFieldFirstN = new javax.swing.JTextField();
        LabelSurnames = new javax.swing.JLabel();
        TextFieldSurnames = new javax.swing.JTextField();
        LabelWorkID = new javax.swing.JLabel();
        TextFieldWorkID = new javax.swing.JTextField();
        LabelIdNumber = new javax.swing.JLabel();
        TextFieldIdNumber = new javax.swing.JTextField();
        LabelDepartment = new javax.swing.JLabel();
        TextFieldDepartment = new javax.swing.JTextField();
        BtnAddEmployee = new javax.swing.JButton();
        panelEditEmployee = new javax.swing.JPanel();
        ScrollPaneEmployee = new javax.swing.JScrollPane();
        taEditEmployee = new javax.swing.JTextArea();
        lblEditEmployee = new javax.swing.JLabel();
        btnEditEmployee = new javax.swing.JButton();
        btnShowEmployees = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuFile = new javax.swing.JMenu();
        MenuItemSaveAll = new javax.swing.JMenuItem();
        MenuMother = new javax.swing.JMenu();
        MenuItemAddMother = new javax.swing.JMenuItem();
        menuItemEditMother = new javax.swing.JMenuItem();
        MenuItemPregnancy = new javax.swing.JMenuItem();
        MenuEmployee = new javax.swing.JMenu();
        menuItemEditEmployee = new javax.swing.JMenuItem();
        MenuItemAddEmployee = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 0));

        PanelHome.setBackground(new java.awt.Color(51, 51, 255));
        PanelHome.setLayout(new java.awt.CardLayout());

        PanelFile.setBackground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout PanelFileLayout = new javax.swing.GroupLayout(PanelFile);
        PanelFile.setLayout(PanelFileLayout);
        PanelFileLayout.setHorizontalGroup(
            PanelFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 895, Short.MAX_VALUE)
        );
        PanelFileLayout.setVerticalGroup(
            PanelFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        PanelHome.add(PanelFile, "card2");

        PanelMother.setBackground(new java.awt.Color(255, 51, 204));

        LabelFirstName.setText("First Name");

        TextFieldFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldFirstNameActionPerformed(evt);
            }
        });

        LabelSurname.setText("Surname");

        LabelIDNumber.setText("ID Number");

        LabelBloodGroup.setText("Blood Group");

        LabelPregnancyPeriod.setText("Pregnancy Period");

        TextFieldPregnancyPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldPregnancyPeriodActionPerformed(evt);
            }
        });

        ButtonAddMother.setText("Add Mother");
        ButtonAddMother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddMotherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelMotherLayout = new javax.swing.GroupLayout(PanelMother);
        PanelMother.setLayout(PanelMotherLayout);
        PanelMotherLayout.setHorizontalGroup(
            PanelMotherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMotherLayout.createSequentialGroup()
                .addGroup(PanelMotherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelMotherLayout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addGroup(PanelMotherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextFieldPregnancyPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(LabelSurname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextFieldSurname)
                            .addComponent(LabelIDNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextFieldIDNO)
                            .addComponent(LabelBloodGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextFieldBloodGroup)
                            .addComponent(LabelPregnancyPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(LabelFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextFieldFirstName)))
                    .addGroup(PanelMotherLayout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(ButtonAddMother)))
                .addContainerGap(482, Short.MAX_VALUE))
        );
        PanelMotherLayout.setVerticalGroup(
            PanelMotherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMotherLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(LabelFirstName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelSurname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelIDNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldIDNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelBloodGroup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextFieldBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelPregnancyPeriod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldPregnancyPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(ButtonAddMother)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        PanelHome.add(PanelMother, "card4");

        PanelPregnancy.setBackground(new java.awt.Color(51, 51, 255));

        TextAreaPregnancy.setColumns(20);
        TextAreaPregnancy.setRows(5);
        ScrollPanePregnancy.setViewportView(TextAreaPregnancy);

        Buttonpregnancy.setText("Read About Pregnancy stage");
        Buttonpregnancy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonpregnancyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPregnancyLayout = new javax.swing.GroupLayout(PanelPregnancy);
        PanelPregnancy.setLayout(PanelPregnancyLayout);
        PanelPregnancyLayout.setHorizontalGroup(
            PanelPregnancyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPregnancyLayout.createSequentialGroup()
                .addGroup(PanelPregnancyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPregnancyLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(ScrollPanePregnancy, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelPregnancyLayout.createSequentialGroup()
                        .addGap(326, 326, 326)
                        .addComponent(Buttonpregnancy)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        PanelPregnancyLayout.setVerticalGroup(
            PanelPregnancyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPregnancyLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(Buttonpregnancy)
                .addGap(18, 18, 18)
                .addComponent(ScrollPanePregnancy, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        PanelHome.add(PanelPregnancy, "card7");

        PanelEditMother.setBackground(new java.awt.Color(0, 255, 204));

        TextAreaEditMother.setColumns(20);
        TextAreaEditMother.setRows(5);
        ScrollPaneMother.setViewportView(TextAreaEditMother);

        LabelEditMother.setText("Edit Mother's Details");

        ButtonSaveMother.setText("Save");
        ButtonSaveMother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveMotherActionPerformed(evt);
            }
        });

        ButtonShowMothers.setText("Show Mothers");
        ButtonShowMothers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonShowMothersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEditMotherLayout = new javax.swing.GroupLayout(PanelEditMother);
        PanelEditMother.setLayout(PanelEditMotherLayout);
        PanelEditMotherLayout.setHorizontalGroup(
            PanelEditMotherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEditMotherLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelEditMotherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelEditMother, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(ButtonShowMothers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelEditMotherLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(ScrollPaneMother, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEditMotherLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonSaveMother)
                .addGap(374, 374, 374))
        );
        PanelEditMotherLayout.setVerticalGroup(
            PanelEditMotherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEditMotherLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelEditMother, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(ButtonShowMothers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollPaneMother, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonSaveMother)
                .addGap(33, 33, 33))
        );

        PanelHome.add(PanelEditMother, "card6");

        PanelEmployee.setBackground(new java.awt.Color(153, 0, 153));

        LabelFirstN.setText("First Name");

        LabelSurnames.setText("Surname");

        LabelWorkID.setText("Work ID");

        LabelIdNumber.setText("ID Number");

        LabelDepartment.setText("Department");

        BtnAddEmployee.setText("Add Employee");
        BtnAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddEmployeeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEmployeeLayout = new javax.swing.GroupLayout(PanelEmployee);
        PanelEmployee.setLayout(PanelEmployeeLayout);
        PanelEmployeeLayout.setHorizontalGroup(
            PanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEmployeeLayout.createSequentialGroup()
                .addGroup(PanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEmployeeLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addGroup(PanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TextFieldIdNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldWorkID, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldSurnames, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LabelIdNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LabelWorkID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LabelSurnames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LabelFirstN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LabelDepartment, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                .addComponent(TextFieldFirstN, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PanelEmployeeLayout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(BtnAddEmployee)))
                .addContainerGap(473, Short.MAX_VALUE))
        );
        PanelEmployeeLayout.setVerticalGroup(
            PanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEmployeeLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(LabelFirstN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextFieldFirstN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LabelSurnames)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldSurnames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelWorkID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextFieldWorkID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelDepartment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelIdNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TextFieldIdNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnAddEmployee)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        PanelHome.add(PanelEmployee, "card4");

        panelEditEmployee.setBackground(new java.awt.Color(255, 255, 0));

        taEditEmployee.setColumns(20);
        taEditEmployee.setRows(5);
        ScrollPaneEmployee.setViewportView(taEditEmployee);

        lblEditEmployee.setText("Edit Employee");

        btnEditEmployee.setText("Save");
        btnEditEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEmployeeActionPerformed(evt);
            }
        });

        btnShowEmployees.setText("Show Employees");
        btnShowEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEmployeesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEditEmployeeLayout = new javax.swing.GroupLayout(panelEditEmployee);
        panelEditEmployee.setLayout(panelEditEmployeeLayout);
        panelEditEmployeeLayout.setHorizontalGroup(
            panelEditEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditEmployeeLayout.createSequentialGroup()
                .addGap(0, 198, Short.MAX_VALUE)
                .addComponent(ScrollPaneEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274))
            .addGroup(panelEditEmployeeLayout.createSequentialGroup()
                .addGroup(panelEditEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditEmployeeLayout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(btnEditEmployee))
                    .addGroup(panelEditEmployeeLayout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addGroup(panelEditEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEditEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShowEmployees))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelEditEmployeeLayout.setVerticalGroup(
            panelEditEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditEmployeeLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(lblEditEmployee)
                .addGap(18, 18, 18)
                .addComponent(btnShowEmployees)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollPaneEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnEditEmployee)
                .addGap(82, 82, 82))
        );

        PanelHome.add(panelEditEmployee, "card5");

        MenuFile.setBackground(new java.awt.Color(255, 102, 102));
        MenuFile.setText("File");
        MenuFile.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                MenuFileComponentAdded(evt);
            }
        });
        MenuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileActionPerformed(evt);
            }
        });

        MenuItemSaveAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemSaveAll.setBackground(new java.awt.Color(0, 255, 255));
        MenuItemSaveAll.setText("Save All");
        MenuItemSaveAll.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MenuItemSaveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSaveAllActionPerformed(evt);
            }
        });
        MenuFile.add(MenuItemSaveAll);

        jMenuBar1.add(MenuFile);

        MenuMother.setBackground(new java.awt.Color(0, 255, 51));
        MenuMother.setText("Mother");

        MenuItemAddMother.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemAddMother.setBackground(new java.awt.Color(255, 153, 153));
        MenuItemAddMother.setText("Add Mother");
        MenuItemAddMother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemAddMotherActionPerformed(evt);
            }
        });
        MenuMother.add(MenuItemAddMother);

        menuItemEditMother.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuItemEditMother.setText("Edit Mother");
        menuItemEditMother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEditMotherActionPerformed(evt);
            }
        });
        MenuMother.add(menuItemEditMother);

        MenuItemPregnancy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemPregnancy.setText("Pregnancy Stages");
        MenuItemPregnancy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemPregnancyActionPerformed(evt);
            }
        });
        MenuMother.add(MenuItemPregnancy);

        jMenuBar1.add(MenuMother);

        MenuEmployee.setBackground(new java.awt.Color(51, 255, 255));
        MenuEmployee.setText("Employee");

        menuItemEditEmployee.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        menuItemEditEmployee.setText("Edit Employee");
        menuItemEditEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEditEmployeeActionPerformed(evt);
            }
        });
        MenuEmployee.add(menuItemEditEmployee);

        MenuItemAddEmployee.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemAddEmployee.setBackground(new java.awt.Color(255, 51, 255));
        MenuItemAddEmployee.setText("Add Employee");
        MenuItemAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemAddEmployeeActionPerformed(evt);
            }
        });
        MenuEmployee.add(MenuItemAddEmployee);

        jMenuBar1.add(MenuEmployee);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 895, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PanelHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 447, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PanelHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonAddMotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddMotherActionPerformed

       /* FileNameExtensionFilter ft = new FileNameExtensionFilter("Text Files", ".txt");
        db.addChoosableFileFilter(ft);
        int returnVal = db.showSaveDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {

            try {
                java.io.File saved_file = db.getSelectedFile();
                String file_name = saved_file.toString();

                WriteFile dat = new WriteFile(file_name, true);
                String alltext = TextFieldFirstName.getText() + "   " + TextFieldSurname.getText() + " , " + "ID NO." + " : " + TextFieldIDNO.getText() + " , " + "Bloodgroup " + " : " + TextFieldBloodGroup.getText() + " , " + TextFieldPregnancyPeriod.getText() + " " + " month(s)";

                dat.writeToFile(alltext);

                JOptionPane.showMessageDialog(this, "File Saved");

            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_ButtonAddMotherActionPerformed
*/
        File file = new File("Mother.txt");
        if (file.exists()) {
            FileReader fileReader = null;
            try {
                //Just Read
                fileReader = new FileReader("Mother.txt");
                BufferedReader br = new BufferedReader(fileReader);
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();
                while (line != null) {
                    sb.append(line);
                    line = br.readLine();
                }
                String allMothers = sb.toString();
              
         
                //Let's concatenate the file with the new details

                String textLine = "First Name:" + TextFieldFirstName.getText() + "," + "Surname:" + TextFieldSurname.getText() + "\n";
                FileWriter write = new FileWriter("Mother.txt");
                PrintWriter print_line = new PrintWriter(write);
                print_line.printf("%s" + "%n" , allMothers + textLine);
                print_line.close();

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileReader.close();
                } catch (IOException ex) {
                    Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else {

            FileWriter write = null;
            try {
                //1. Create a new employees file and add the data
                String textLine = "First Name:" + TextFieldFirstName.getText() + "," + "Surname:" + TextFieldSurname.getText() + ";\n";
                write = new FileWriter("Mother.txt");
                PrintWriter print_line = new PrintWriter(write);
                print_line.printf("%s" + "%n", textLine);
                print_line.close();
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    write.close();
                } catch (IOException ex) {
                    Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        }
       
         JOptionPane.showMessageDialog(this, "Mother Details Saved");
         
    }


    private void TextFieldPregnancyPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldPregnancyPeriodActionPerformed
  
    }//GEN-LAST:event_TextFieldPregnancyPeriodActionPerformed

    private void MenuItemAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemAddEmployeeActionPerformed
        PanelHome.removeAll();
        PanelHome.add(PanelEmployee);
        PanelHome.repaint();
        PanelHome.validate();
    }//GEN-LAST:event_MenuItemAddEmployeeActionPerformed

    private void MenuItemAddMotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemAddMotherActionPerformed
        PanelHome.removeAll();
        PanelHome.add(PanelMother);
        PanelHome.repaint();
        PanelHome.validate();

    }//GEN-LAST:event_MenuItemAddMotherActionPerformed

    private void MenuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuFileActionPerformed

    private void MenuFileComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_MenuFileComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuFileComponentAdded

    private void MenuItemSaveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSaveAllActionPerformed
        PanelHome.removeAll();
        PanelHome.add(PanelFile);
        PanelHome.repaint();
        PanelHome.validate();
        //int returnVal = db.showSaveDialog( this );
    }//GEN-LAST:event_MenuItemSaveAllActionPerformed

    private void TextFieldFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldFirstNameActionPerformed

    private void BtnAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddEmployeeActionPerformed
        File file = new File("Employee.txt");
        if (file.exists()) {
            FileReader fileReader = null;
            try {
                //Just Read
                fileReader = new FileReader("Employee.txt");
                BufferedReader br = new BufferedReader(fileReader);
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();
                while (line != null) {
                    sb.append(line);
                    line = br.readLine();

                }
                String allEmployees = sb.toString();
                //Let's concatenate the file with the new details

                String textLine = "First name:" + TextFieldFirstN.getText() + " " + "Surname:" + TextFieldSurnames.getText() +  "\n";
                FileWriter write = new FileWriter("Employee.txt");
                PrintWriter print_line = new PrintWriter(write);
                print_line.printf("%s" + "%n", allEmployees + textLine );
                print_line.close();

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileReader.close();
                } catch (IOException ex) {
                    Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else {

            FileWriter write = null;
            try {
                //1. Create a new employees file and add the data
                String textLine = "First name:" + TextFieldFirstN.getText() + "   " + "Surname:" + TextFieldSurnames.getText() + "\n";
              
                write = new FileWriter("Employee.txt");
                PrintWriter print_line = new PrintWriter(write);
                print_line.printf("%s" + "%n", textLine);
                print_line.close();
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    write.close();
                } catch (IOException ex) {
                    Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        }
         JOptionPane.showMessageDialog(this, "Employee Details Saved");
         
    }

        
        /*  FileNameExtensionFilter ft = new FileNameExtensionFilter("Text Files", "Mother Details.txt"); db.addChoosableFileFilter(ft); int
          returnVal = db.showSaveDialog(this);
         
          if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
         
          try { java.io.File saved_file = db.getSelectedFile(); String
          file_name = saved_file.toString();
         
          WriteFile dat = new WriteFile(file_name, true); String alltext =
          TextFieldFirstN.getText() + " " + TextFieldSurnames.getText() + " : "
          + "ID NO. " + " " + TextFieldIdNumber.getText() + " " + "Work ID: " +
          " " + TextFieldWorkID.getText() + " " + TextFieldDepartment.getText()
          + " " + " Department";
         
          dat.writeToFile(alltext);
         
          JOptionPane.showMessageDialog(this, "File Saved");
         
          } catch (IOException ex) {
          Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null,
          ex); }
         
         }
         

    }//GEN-LAST:event_BtnAddEmployeeActionPerformed
*/
    private void menuItemEditEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEditEmployeeActionPerformed
        PanelHome.removeAll();
        PanelHome.add(panelEditEmployee);
        PanelHome.repaint();
        PanelHome.validate();
    }//GEN-LAST:event_menuItemEditEmployeeActionPerformed

    private void btnShowEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEmployeesActionPerformed
        /**
         * 1. Read everything from Employee.txt 2. Show it on the text area 3.
         * Edit it
         *
         */
        File file = new File("Employee.txt");
        if (file.exists()) {
            FileReader fileReader = null;
            try {
                //Just Read
                fileReader = new FileReader("Employee.txt");
                BufferedReader br = new BufferedReader(fileReader);
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();
                while (line != null) {
                    sb.append(line);
                    line = br.readLine();

                }
                String allEmployees = sb.toString();
                //Let's concatenate the file with the new details

                taEditEmployee.setText(allEmployees);
                

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileReader.close();
                } catch (IOException ex) {
                    Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnShowEmployeesActionPerformed

    private void btnEditEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEmployeeActionPerformed
        /**
         * 4.Read from the text area 5. Save in Employee.txt
         */
        String ta = taEditEmployee.getText().trim();
        taEditEmployee.getParent().revalidate();
        FileWriter write = null;
        try {
            write = new FileWriter("Employee.txt");
            PrintWriter print_line = new PrintWriter(write);
            print_line.printf("%s" + "%n", ta);
            print_line.close();
        } catch (IOException ex) {
            Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                write.close();
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
     JOptionPane.showMessageDialog(this, "Employee Name Successfully Edited");
    }//GEN-LAST:event_btnEditEmployeeActionPerformed

    private void menuItemEditMotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEditMotherActionPerformed
        PanelHome.removeAll();
        PanelHome.add(PanelEditMother);
        PanelHome.repaint();
        PanelHome.validate();
    }//GEN-LAST:event_menuItemEditMotherActionPerformed

    private void ButtonSaveMotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveMotherActionPerformed
       String t = TextAreaEditMother.getText().trim();
        FileWriter write = null;
        try {
            write = new FileWriter("Mother.txt");
            PrintWriter print_line = new PrintWriter(write);
            print_line.printf("%s" + "%n", t);
            print_line.close();
        } catch (IOException ex) {
            Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                write.close();
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
     JOptionPane.showMessageDialog(this, "Mother Name Successfully Edited");
                                        
    }//GEN-LAST:event_ButtonSaveMotherActionPerformed

    private void ButtonShowMothersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonShowMothersActionPerformed
        /**
         * 1. Read everything from mothers.txt 2. Show it on the text area 3.
         * Edit it
         *
         */
        File file = new File("Mother.txt");
        if (file.exists()) {
            FileReader fileReader = null;
            try {
                //Just Read
                fileReader = new FileReader("Mother.txt");
                BufferedReader br = new BufferedReader(fileReader);
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();
                while (line != null) {
                    sb.append(line);
                    line = br.readLine();
               }
                String allMothers = sb.toString();
                //Let's concatenate the file with the new details

                TextAreaEditMother.setText(allMothers);
                

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileReader.close();
                } catch (IOException ex) {
                    Logger.getLogger(Welcomes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
      
    }//GEN-LAST:event_ButtonShowMothersActionPerformed

    private void MenuItemPregnancyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemPregnancyActionPerformed
        PanelHome.removeAll();
        PanelHome.add(PanelPregnancy);
        PanelHome.repaint();
        PanelHome.validate();
    }//GEN-LAST:event_MenuItemPregnancyActionPerformed

    private void ButtonpregnancyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonpregnancyActionPerformed
       JFileChooser chooser =new JFileChooser();
      chooser.showOpenDialog(null);
      File f =chooser.getSelectedFile();
      String filename=f.getAbsolutePath();
      try{
          FileReader reader= new FileReader(filename);
          BufferedReader br =new BufferedReader(reader);
          TextAreaPregnancy.read(br, null);
          br.close();
          TextAreaPregnancy.requestFocus();
      }
      catch (Exception e){
      JOptionPane.showMessageDialog(null, e);
          
      }

  
        
    }//GEN-LAST:event_ButtonpregnancyActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Welcomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Welcomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Welcomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Welcomes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Welcomes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAddEmployee;
    private javax.swing.JButton ButtonAddMother;
    private javax.swing.JButton ButtonSaveMother;
    private javax.swing.JButton ButtonShowMothers;
    private javax.swing.JButton Buttonpregnancy;
    private javax.swing.JLabel LabelBloodGroup;
    private javax.swing.JLabel LabelDepartment;
    private javax.swing.JLabel LabelEditMother;
    private javax.swing.JLabel LabelFirstN;
    private javax.swing.JLabel LabelFirstName;
    private javax.swing.JLabel LabelIDNumber;
    private javax.swing.JLabel LabelIdNumber;
    private javax.swing.JLabel LabelPregnancyPeriod;
    private javax.swing.JLabel LabelSurname;
    private javax.swing.JLabel LabelSurnames;
    private javax.swing.JLabel LabelWorkID;
    private javax.swing.JMenu MenuEmployee;
    private javax.swing.JMenu MenuFile;
    private javax.swing.JMenuItem MenuItemAddEmployee;
    private javax.swing.JMenuItem MenuItemAddMother;
    private javax.swing.JMenuItem MenuItemPregnancy;
    private javax.swing.JMenuItem MenuItemSaveAll;
    private javax.swing.JMenu MenuMother;
    private javax.swing.JPanel PanelEditMother;
    private javax.swing.JPanel PanelEmployee;
    private javax.swing.JPanel PanelFile;
    private javax.swing.JPanel PanelHome;
    private javax.swing.JPanel PanelMother;
    private javax.swing.JPanel PanelPregnancy;
    private javax.swing.JScrollPane ScrollPaneEmployee;
    private javax.swing.JScrollPane ScrollPaneMother;
    private javax.swing.JScrollPane ScrollPanePregnancy;
    private javax.swing.JTextArea TextAreaEditMother;
    private javax.swing.JTextArea TextAreaPregnancy;
    private javax.swing.JTextField TextFieldBloodGroup;
    private javax.swing.JTextField TextFieldDepartment;
    private javax.swing.JTextField TextFieldFirstN;
    private javax.swing.JTextField TextFieldFirstName;
    private javax.swing.JTextField TextFieldIDNO;
    private javax.swing.JTextField TextFieldIdNumber;
    private javax.swing.JTextField TextFieldPregnancyPeriod;
    private javax.swing.JTextField TextFieldSurname;
    private javax.swing.JTextField TextFieldSurnames;
    private javax.swing.JTextField TextFieldWorkID;
    private javax.swing.JButton btnEditEmployee;
    private javax.swing.JButton btnShowEmployees;
    private javax.swing.JFileChooser db;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel lblEditEmployee;
    private javax.swing.JMenuItem menuItemEditEmployee;
    private javax.swing.JMenuItem menuItemEditMother;
    private javax.swing.JPanel panelEditEmployee;
    private javax.swing.JTextArea taEditEmployee;
    // End of variables declaration//GEN-END:variables

    static class ButtonSubmitActionPerformed {

        public ButtonSubmitActionPerformed() {
        }
    }

}
